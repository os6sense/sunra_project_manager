= simple_form_for [@project, @booking] do |f|
  = render "layouts/errors", :object => @booking

  .items
    %fieldset{:class => "item"}
      = f.input :facility_studio,
        :collection => StudioLookup.find(:all, :select => 'id, studio_name'),
        :label_method => :studio_name,
        :selected => 1,
        :label => "Studio"

      .input-append{:id => "bookingdatepicker", :class => "control-group"}
        = f.label "Date"
        = f.input_field :date, :as => :string,
          "data-format" => "yyyy-MM-dd"

        %span{:class=>"add-on"}
          %i{'data-time-icon' => 'icon-time',
          'data-date-icon' => 'icon-calendar'}
        = f.error :date

      .input-append{:id => "bookingstarttimepicker", :class => "control-group"}
        = f.label "Start Time"
        = f.input_field :start_time, :as => :string, "data-format" => "hh:mm",
          :value => @booking.start_time ? @booking.start_time.strftime("%H:%M") : "17:00"

        %span{:class=>"add-on"}
          %i{'data-time-icon' => "icon-time", 'data-date-icon' => 'icon-calendar'}
        = f.error :start_time

      .input-append{:id=>"bookingendtimepicker"}
        = f.label "End Time"
        = f.input_field :end_time, :as => :string, "data-format" => "hh:mm",
          :value => @booking.end_time ? @booking.end_time.strftime("%H:%M") : "23:30"

        %span{:class=>"add-on"}
          %i{'data-time-icon' => 'icon-time', 'data-date-icon' => 'icon-calendar'}
        = f.error :end_time

      = f.input :availability_notes, :label => "Availability Notes",
          :input_html => {:rows => 4, :cols => 80 }

      :javascript
        $(function() {
          $('#bookingdatepicker').datetimepicker({ pickTime: false });
          $('#bookingstarttimepicker').datetimepicker({ pickDate: false, pickSeconds: false  });
          $('#bookingendtimepicker').datetimepicker({ pickDate: false, pickSeconds: false});
        });

  .form-actions
    = f.button :submit, :class => 'btn btn-success'
    = link_to "Cancel", :back, :class => 'btn btn-danger'
